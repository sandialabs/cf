#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// gov.sandia.cf.application.AApplication
	c317725 [label=<<table title="gov.sandia.cf.application.AApplication" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../AApplication.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> AApplication </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AApplication() </td></tr>
<tr><td align="left" balign="left"> + AApplication(appMgr : IApplicationManager) </td></tr>
<tr><td align="left" balign="left"> + getAppMgr() : IApplicationManager </td></tr>
<tr><td align="left" balign="left"> + setAppMgr(appMgr : IApplicationManager) </td></tr>
<tr><td align="left" balign="left"> + getDaoManager() : DaoManager </td></tr>
		</table></td></tr>
		</table>>, URL="../AApplication.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// gov.sandia.cf.application.impl.PIRTApplication
	c317814 [label=<<table title="gov.sandia.cf.application.impl.PIRTApplication" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./PIRTApplication.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PIRTApplication </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PIRTApplication() </td></tr>
<tr><td align="left" balign="left"> + PIRTApplication(appMgr : ApplicationManager) </td></tr>
<tr><td align="left" balign="left"> + loadPIRTConfiguration(model : Model) : PIRTSpecification </td></tr>
<tr><td align="left" balign="left"> + sameConfiguration(spec1 : PIRTSpecification, spec2 : PIRTSpecification) : boolean </td></tr>
<tr><td align="left" balign="left"> + getBackgroundColor(pirtConfiguration : PIRTSpecification, expectedLevel : PIRTLevelImportance, currentLevel : PIRTLevelImportance) : RGB </td></tr>
<tr><td align="left" balign="left"> + resetQoI(qoi : QuantityOfInterest) : QuantityOfInterest </td></tr>
<tr><td align="left" balign="left"> + tagQoI(qoi : QuantityOfInterest, tagDescription : String, currentUser : User) : QuantityOfInterest </td></tr>
<tr><td align="left" balign="left"> + duplicateQoI(qoi : QuantityOfInterest, duplicatedQoi : QuantityOfInterest, user : User) : QuantityOfInterest </td></tr>
<tr><td align="left" balign="left"> + getQoIList(model : Model) : List&lt;QuantityOfInterest&gt; </td></tr>
<tr><td align="left" balign="left"> + getRootQoI(model : Model) : List&lt;QuantityOfInterest&gt; </td></tr>
<tr><td align="left" balign="left"> + getQoIById(qoiId : Integer) : QuantityOfInterest </td></tr>
<tr><td align="left" balign="left"> + existsQoISymbol(id : Integer[], symbol : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + addQoI(qoi : QuantityOfInterest, user : User) : QuantityOfInterest </td></tr>
<tr><td align="left" balign="left"> + addQoI(qoi : QuantityOfInterest, user : User, headers : List&lt;PIRTDescriptionHeader&gt;) : QuantityOfInterest </td></tr>
<tr><td align="left" balign="left"> + updateQoI(qoi : QuantityOfInterest, user : User) : QuantityOfInterest </td></tr>
<tr><td align="left" balign="left"> + deleteQoI(qoi : QuantityOfInterest) </td></tr>
<tr><td align="left" balign="left"> + getQoIHeaders() : List&lt;QoIHeader&gt; </td></tr>
<tr><td align="left" balign="left"> + addQoIHeader(qoiHeader : QoIHeader, user : User) : QoIHeader </td></tr>
<tr><td align="left" balign="left"> + updateQoIHeader(qoiHeader : QoIHeader, user : User) : QoIHeader </td></tr>
<tr><td align="left" balign="left"> + deleteQoIHeader(qoiHeader : QoIHeader) </td></tr>
<tr><td align="left" balign="left"> + getPhenomenonGroups() : List&lt;PhenomenonGroup&gt; </td></tr>
<tr><td align="left" balign="left"> + addPhenomenonGroup(group : PhenomenonGroup) : PhenomenonGroup </td></tr>
<tr><td align="left" balign="left"> + updatePhenomenonGroup(group : PhenomenonGroup) : PhenomenonGroup </td></tr>
<tr><td align="left" balign="left"> + deletePhenomenonGroup(group : PhenomenonGroup) </td></tr>
<tr><td align="left" balign="left"> + reorderPhenomenonGroups(groupToMove : PhenomenonGroup, newIndex : int) </td></tr>
<tr><td align="left" balign="left"> + getPhenomena() : List&lt;Phenomenon&gt; </td></tr>
<tr><td align="left" balign="left"> + addPhenomenon(phenomenon : Phenomenon) : Phenomenon </td></tr>
<tr><td align="left" balign="left"> + updatePhenomenon(phenomenon : Phenomenon) : Phenomenon </td></tr>
<tr><td align="left" balign="left"> + deletePhenomenon(phenomenon : Phenomenon) </td></tr>
<tr><td align="left" balign="left"> + reorderPhenomena(phenomenonToMove : Phenomenon, newIndex : int) </td></tr>
<tr><td align="left" balign="left"> + getCriterion() : List&lt;Criterion&gt; </td></tr>
<tr><td align="left" balign="left"> + addCriterion(criterion : Criterion) : Criterion </td></tr>
<tr><td align="left" balign="left"> + updateCriterion(criterion : Criterion) : Criterion </td></tr>
<tr><td align="left" balign="left"> + deleteCriterion(criterion : Criterion) </td></tr>
<tr><td align="left" balign="left"> + executeQuery(query : PIRTQuery, criteriaInputList : List&lt;String&gt;) : List&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + getPIRTAdequacyColumnGuideline() : List&lt;PIRTAdequacyColumnGuideline&gt; </td></tr>
<tr><td align="left" balign="left"> + addPIRTAdequacyColumnGuideline(pirtAdequacyColumnGuideline : PIRTAdequacyColumnGuideline) : PIRTAdequacyColumnGuideline </td></tr>
<tr><td align="left" balign="left"> + updatePIRTAdequacyColumnGuideline(pirtAdequacyColumnGuideline : PIRTAdequacyColumnGuideline) : PIRTAdequacyColumnGuideline </td></tr>
<tr><td align="left" balign="left"> + deleteAllPIRTAdequacyColumnGuideline(pirtGuidelines : List&lt;PIRTAdequacyColumnGuideline&gt;) </td></tr>
<tr><td align="left" balign="left"> + deletePIRTAdequacyColumnGuideline(pirtAdequacyColumnGuideline : PIRTAdequacyColumnGuideline) </td></tr>
<tr><td align="left" balign="left"> + getPIRTAdequacyColumnLevelGuideline() : List&lt;PIRTAdequacyColumnLevelGuideline&gt; </td></tr>
<tr><td align="left" balign="left"> + addPIRTAdequacyColumnLevelGuideline(pirtAdequacyColumnGuideline : PIRTAdequacyColumnLevelGuideline) : PIRTAdequacyColumnLevelGuideline </td></tr>
<tr><td align="left" balign="left"> + updatePIRTAdequacyColumnLevelGuideline(pirtAdequacyColumnGuideline : PIRTAdequacyColumnLevelGuideline) : PIRTAdequacyColumnLevelGuideline </td></tr>
<tr><td align="left" balign="left"> + deletePIRTAdequacyColumnLevelGuideline(pirtAdequacyColumnGuideline : PIRTAdequacyColumnLevelGuideline) </td></tr>
<tr><td align="left" balign="left"> + getPIRTAdequacyColumn() : List&lt;PIRTAdequacyColumn&gt; </td></tr>
<tr><td align="left" balign="left"> + addPIRTAdequacyColumn(pirtAdequacyColumn : PIRTAdequacyColumn) : PIRTAdequacyColumn </td></tr>
<tr><td align="left" balign="left"> + updatePIRTAdequacyColumn(pirtAdequacyColumn : PIRTAdequacyColumn) : PIRTAdequacyColumn </td></tr>
<tr><td align="left" balign="left"> + deleteAllPIRTAdequacyColumn(pirtAdequacyColumns : List&lt;PIRTAdequacyColumn&gt;) </td></tr>
<tr><td align="left" balign="left"> + deletePIRTAdequacyColumn(pirtAdequacyColumn : PIRTAdequacyColumn) </td></tr>
<tr><td align="left" balign="left"> + getPIRTDescriptionHeader() : List&lt;PIRTDescriptionHeader&gt; </td></tr>
<tr><td align="left" balign="left"> + addPIRTDescriptionHeader(pirtAdequacyColumn : PIRTDescriptionHeader) : PIRTDescriptionHeader </td></tr>
<tr><td align="left" balign="left"> + updatePIRTDescriptionHeader(pirtAdequacyColumn : PIRTDescriptionHeader) : PIRTDescriptionHeader </td></tr>
<tr><td align="left" balign="left"> + deleteAllPIRTDescriptionHeader(pirtHeaders : List&lt;PIRTDescriptionHeader&gt;) </td></tr>
<tr><td align="left" balign="left"> + deletePIRTDescriptionHeader(pirtAdequacyColumn : PIRTDescriptionHeader) </td></tr>
<tr><td align="left" balign="left"> + getPIRTLevelDifferenceColor() : List&lt;PIRTLevelDifferenceColor&gt; </td></tr>
<tr><td align="left" balign="left"> + addPIRTLevelDifferenceColor(pirtAdequacyColumn : PIRTLevelDifferenceColor) : PIRTLevelDifferenceColor </td></tr>
<tr><td align="left" balign="left"> + updatePIRTLevelDifferenceColor(pirtAdequacyColumn : PIRTLevelDifferenceColor) : PIRTLevelDifferenceColor </td></tr>
<tr><td align="left" balign="left"> + deleteAllPIRTLevelDifferenceColor(pirtColors : List&lt;PIRTLevelDifferenceColor&gt;) </td></tr>
<tr><td align="left" balign="left"> + deletePIRTLevelDifferenceColor(pirtAdequacyColumn : PIRTLevelDifferenceColor) </td></tr>
<tr><td align="left" balign="left"> + getPIRTLevelImportance() : List&lt;PIRTLevelImportance&gt; </td></tr>
<tr><td align="left" balign="left"> + addPIRTLevelImportance(pirtAdequacyColumn : PIRTLevelImportance) : PIRTLevelImportance </td></tr>
<tr><td align="left" balign="left"> + updatePIRTLevelImportance(pirtAdequacyColumn : PIRTLevelImportance) : PIRTLevelImportance </td></tr>
<tr><td align="left" balign="left"> + deleteAllPIRTLevelImportance(pirtLevels : List&lt;PIRTLevelImportance&gt;) </td></tr>
<tr><td align="left" balign="left"> + deletePIRTLevelImportance(pirtAdequacyColumn : PIRTLevelImportance) </td></tr>
<tr><td align="left" balign="left"> + isPIRTEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + refresh(qoi : QuantityOfInterest) </td></tr>
<tr><td align="left" balign="left"> + refresh(group : PhenomenonGroup) </td></tr>
<tr><td align="left" balign="left"> + refresh(phenomenon : Phenomenon) </td></tr>
		</table></td></tr>
		</table>>, URL="./PIRTApplication.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// gov.sandia.cf.application.IPIRTApplication
	c317826 [label=<<table title="gov.sandia.cf.application.IPIRTApplication" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../IPIRTApplication.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IPIRTApplication </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + loadPIRTConfiguration(model : Model) : PIRTSpecification </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getBackgroundColor(pirtConfiguration : PIRTSpecification, expectedLevel : PIRTLevelImportance, currentLevel : PIRTLevelImportance) : RGB </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + resetQoI(qoi : QuantityOfInterest) : QuantityOfInterest </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + tagQoI(qoi : QuantityOfInterest, tagDescriptionn : String, currentUser : User) : QuantityOfInterest </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + duplicateQoI(qoi : QuantityOfInterest, duplicatedQoi : QuantityOfInterest, user : User) : QuantityOfInterest </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getQoIList(model : Model) : List&lt;QuantityOfInterest&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getRootQoI(model : Model) : List&lt;QuantityOfInterest&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getQoIById(qoiId : Integer) : QuantityOfInterest </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + existsQoISymbol(id : Integer[], symbol : String) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addQoI(qoi : QuantityOfInterest, user : User) : QuantityOfInterest </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addQoI(qoi : QuantityOfInterest, user : User, headers : List&lt;PIRTDescriptionHeader&gt;) : QuantityOfInterest </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + updateQoI(qoi : QuantityOfInterest, user : User) : QuantityOfInterest </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deleteQoI(qoi : QuantityOfInterest) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getQoIHeaders() : List&lt;QoIHeader&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addQoIHeader(qoiHeader : QoIHeader, user : User) : QoIHeader </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + updateQoIHeader(qoiHeader : QoIHeader, user : User) : QoIHeader </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deleteQoIHeader(qoiHeader : QoIHeader) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getPhenomenonGroups() : List&lt;PhenomenonGroup&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addPhenomenonGroup(groupToCreate : PhenomenonGroup) : PhenomenonGroup </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + updatePhenomenonGroup(group : PhenomenonGroup) : PhenomenonGroup </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deletePhenomenonGroup(group : PhenomenonGroup) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + reorderPhenomenonGroups(groupToMove : PhenomenonGroup, newIndex : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getPhenomena() : List&lt;Phenomenon&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addPhenomenon(phenomenonToCreate : Phenomenon) : Phenomenon </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + updatePhenomenon(phenomenon : Phenomenon) : Phenomenon </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deletePhenomenon(phenomenon : Phenomenon) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + reorderPhenomena(phenomenonToMove : Phenomenon, newIndex : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getCriterion() : List&lt;Criterion&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addCriterion(criterion : Criterion) : Criterion </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + updateCriterion(criterion : Criterion) : Criterion </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deleteCriterion(criterion : Criterion) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + executeQuery(query : PIRTQuery, criteriaInputList : List&lt;String&gt;) : List&lt;Object&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getPIRTAdequacyColumnGuideline() : List&lt;PIRTAdequacyColumnGuideline&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addPIRTAdequacyColumnGuideline(pirtAdequacyColumnGuideline : PIRTAdequacyColumnGuideline) : PIRTAdequacyColumnGuideline </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + updatePIRTAdequacyColumnGuideline(pirtAdequacyColumnGuideline : PIRTAdequacyColumnGuideline) : PIRTAdequacyColumnGuideline </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deleteAllPIRTAdequacyColumnGuideline(pirtGuidelines : List&lt;PIRTAdequacyColumnGuideline&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deletePIRTAdequacyColumnGuideline(pirtAdequacyColumnGuideline : PIRTAdequacyColumnGuideline) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getPIRTAdequacyColumn() : List&lt;PIRTAdequacyColumn&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addPIRTAdequacyColumn(pirtAdequacyColumn : PIRTAdequacyColumn) : PIRTAdequacyColumn </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + updatePIRTAdequacyColumn(pirtAdequacyColumn : PIRTAdequacyColumn) : PIRTAdequacyColumn </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deleteAllPIRTAdequacyColumn(pirtAdequacyColumns : List&lt;PIRTAdequacyColumn&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deletePIRTAdequacyColumn(pirtAdequacyColumn : PIRTAdequacyColumn) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getPIRTAdequacyColumnLevelGuideline() : List&lt;PIRTAdequacyColumnLevelGuideline&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addPIRTAdequacyColumnLevelGuideline(pirtAdequacyLevelGuideline : PIRTAdequacyColumnLevelGuideline) : PIRTAdequacyColumnLevelGuideline </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + updatePIRTAdequacyColumnLevelGuideline(pirtAdequacyLevelGuideline : PIRTAdequacyColumnLevelGuideline) : PIRTAdequacyColumnLevelGuideline </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deletePIRTAdequacyColumnLevelGuideline(pirtAdequacyLevelGuideline : PIRTAdequacyColumnLevelGuideline) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getPIRTDescriptionHeader() : List&lt;PIRTDescriptionHeader&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addPIRTDescriptionHeader(pirtDescHeader : PIRTDescriptionHeader) : PIRTDescriptionHeader </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + updatePIRTDescriptionHeader(pirtDescHeader : PIRTDescriptionHeader) : PIRTDescriptionHeader </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deleteAllPIRTDescriptionHeader(pirtHeaders : List&lt;PIRTDescriptionHeader&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deletePIRTDescriptionHeader(pirtDescHeader : PIRTDescriptionHeader) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getPIRTLevelDifferenceColor() : List&lt;PIRTLevelDifferenceColor&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addPIRTLevelDifferenceColor(pirtLevelDiffColor : PIRTLevelDifferenceColor) : PIRTLevelDifferenceColor </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + updatePIRTLevelDifferenceColor(pirtLevelDiffColor : PIRTLevelDifferenceColor) : PIRTLevelDifferenceColor </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deleteAllPIRTLevelDifferenceColor(pirtColors : List&lt;PIRTLevelDifferenceColor&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deletePIRTLevelDifferenceColor(pirtLevelDiffColor : PIRTLevelDifferenceColor) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getPIRTLevelImportance() : List&lt;PIRTLevelImportance&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addPIRTLevelImportance(pirtLevelImportance : PIRTLevelImportance) : PIRTLevelImportance </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + updatePIRTLevelImportance(pirtLevelImportance : PIRTLevelImportance) : PIRTLevelImportance </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deleteAllPIRTLevelImportance(pirtLevels : List&lt;PIRTLevelImportance&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + deletePIRTLevelImportance(pirtLevelImportance : PIRTLevelImportance) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + sameConfiguration(spec1 : PIRTSpecification, spec2 : PIRTSpecification) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + isPIRTEnabled() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + refresh(qoi : QuantityOfInterest) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + refresh(group : PhenomenonGroup) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + refresh(phenomenon : Phenomenon) </font></td></tr>
		</table></td></tr>
		</table>>, URL="../IPIRTApplication.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//gov.sandia.cf.application.impl.PIRTApplication extends gov.sandia.cf.application.AApplication
	c317725:p -> c317814:p [dir=back,arrowtail=empty];
	//gov.sandia.cf.application.impl.PIRTApplication implements gov.sandia.cf.application.IPIRTApplication
	c317826:p -> c317814:p [dir=back,arrowtail=empty,style=dashed];
	//gov.sandia.cf.application.impl.PIRTApplication extends gov.sandia.cf.application.AApplication
	c317725:p -> c317814:p [dir=back,arrowtail=empty];
	//gov.sandia.cf.application.impl.PIRTApplication implements gov.sandia.cf.application.IPIRTApplication
	c317826:p -> c317814:p [dir=back,arrowtail=empty,style=dashed];
}

